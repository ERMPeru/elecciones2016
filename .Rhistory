artistas_total[complete.cases(artistas_total$grammy<5),]
artistas_total[artistas_total$grammy<5,]
complete.cases(artistas_total[artistas_total$grammy<5,])
artistas_total[complete.cases(artistas_total[artistas_total$grammy<5,]),]
artistas_total[complete.cases(artistas_total[artistas_total$grammy<5,])$grammy,]
artistas_total[which.max(artistas_total$edad),]
artistas_total[which.max(artistas_total$edad),]$instrumento
artistas[which(artistas$instrumento %in% c('bajo','Bajo','BAJO')),]
sub=artistas_total[artistas_total$banda=='The Beatles',]
sub[sub$edad==max(sub$edad) ]$instrumento
sub=artistas_total[artistas_total$banda=='The Beatles',]
sub[sub$edad==max(sub$edad), ]$instrumento
(sub=artistas_total[artistas_total$banda=='The Beatles',])
#sub[sub$edad==max(sub$edad),]$instrumento
(sub=artistas_total[artistas_total$banda=='The Beatles',])
sub[sub$edad==max(sub$edad),]
sub
sub
(sub=artistas_total[artistas_total$banda=='The Beatles',])
sub[sub$edad==max(sub$edad,na.rm = T),]
(sub=artistas_total[artistas_total$banda=='The Beatles',])
sub[sub$edad==max(sub$edad,na.rm = T),]$instrumento
(sub=artistas_total[artistas_total$banda=='The Beatles',])
sub[sub$edad==max(sub$edad,na.rm = T),]$instrumento
(sub=artistas_total[artistas_total$banda=='The Beatles',])
sub[sub$edad==max(sub$edad,na.rm = T),]$instrumento
sub=artistas_total[artistas_total$banda=='The Beatles',]
sub=sub[complete.cases(sub),]
sub[sub$edad==max(sub$edad),]$instrumento
artistas[which(artistas$instrumento %in% c('bajo')),]
names(mapaMundo)
friends=read.csv("allCandidatesEdges2018Lima.csv")
numberOfRows=length(unique(friends$candidate))
friends=read.csv("allCandidatesEdges2018Lima.csv")
setwd("~/Documents/GITHUBs/perutweet")
friends=read.csv("allCandidatesEdges2018Lima.csv")
numberOfRows=length(unique(friends$candidate))
numberOfColumns=length(unique(friends$friend))
incidenceMatrixFriends <- spMatrix(nrow=numberOfRows,ncol=numberOfColumns,
i = as.numeric(factor(friends$candidate)),j = as.numeric(factor(friends$friend)),
x = rep(1, length(as.numeric(friends$candidate))))
row.names(incidenceMatrixFriends) <- levels(factor(friends$candidate))
colnames(incidenceMatrixFriends) <- levels(factor(friends$friend))
adjacencyMatrixFriends <- incidenceMatrixFriends %*% t(incidenceMatrixFriends)
adjacencyMatrixFriends.pc<- log((adjacencyMatrixFriends+.25)/diag(adjacencyMatrixFriends+.25))
ideal<-prcomp(adjacencyMatrixFriends.pc)
#ideal=scale(adjacencyMatrixFriends.pc) %*%varimax(ideal$rotation[,1:2])$loadings
xvar<- ideal$rotation[,1]
yvar<- ideal$rotation[,2]
library(scatterD3)
library(dbscan)
POSITIONS=NULL
POSITIONS<-cbind(xvar,yvar)
clusterData <- as.matrix(POSITIONS[,1:2])
res <- dbscan(clusterData, eps = .07, minPts = 2)
POSITIONS <- data.frame(POSITIONS, group=res$cluster)
scatterD3(x = POSITIONS$xvar, y = POSITIONS$yvar, lab = rownames(POSITIONS), col_var = POSITIONS$group, lasso = TRUE,ellipses = TRUE,xlab = "Dimensión latente 1",ylab = "Dimensión latente 2",col_lab = "Grupo")
friends=read.csv("allCandidatesEdges2018Lima.csv")
#library(KernSmooth)
library('Matrix')
friends=read.csv("allCandidatesEdges2018Lima.csv")
numberOfRows=length(unique(friends$candidate))
numberOfColumns=length(unique(friends$friend))
incidenceMatrixFriends <- spMatrix(nrow=numberOfRows,ncol=numberOfColumns,
i = as.numeric(factor(friends$candidate)),j = as.numeric(factor(friends$friend)),
x = rep(1, length(as.numeric(friends$candidate))))
row.names(incidenceMatrixFriends) <- levels(factor(friends$candidate))
colnames(incidenceMatrixFriends) <- levels(factor(friends$friend))
adjacencyMatrixFriends <- incidenceMatrixFriends %*% t(incidenceMatrixFriends)
adjacencyMatrixFriends.pc<- log((adjacencyMatrixFriends+.25)/diag(adjacencyMatrixFriends+.25))
ideal<-prcomp(adjacencyMatrixFriends.pc)
#ideal=scale(adjacencyMatrixFriends.pc) %*%varimax(ideal$rotation[,1:2])$loadings
xvar<- ideal$rotation[,1]
yvar<- ideal$rotation[,2]
library(scatterD3)
library(dbscan)
POSITIONS=NULL
POSITIONS<-cbind(xvar,yvar)
clusterData <- as.matrix(POSITIONS[,1:2])
res <- dbscan(clusterData, eps = .07, minPts = 2)
POSITIONS <- data.frame(POSITIONS, group=res$cluster)
scatterD3(x = POSITIONS$xvar, y = POSITIONS$yvar, lab = rownames(POSITIONS), col_var = POSITIONS$group, lasso = TRUE,ellipses = TRUE,xlab = "Dimensión latente 1",ylab = "Dimensión latente 2",col_lab = "Grupo")
provMap_r <- cmdscale(adjacencyMatrixFriends.pc,eig=TRUE, k=2) # k sugiere dimensiones
provMap_r$GOF # mientras mas cerca a 1 mejor.
xvar<- provMap_r$points[,1]
yvar<- provMap_r$points[,2]
library(scatterD3)
library(dbscan)
POSITIONS=NULL
POSITIONS<-cbind(xvar,yvar)
clusterData <- as.matrix(POSITIONS[,1:2])
res <- dbscan(clusterData, eps = .05, minPts = 2)
POSITIONS <- data.frame(POSITIONS, group=res$cluster)
#GRIDkde <- bkde2D(POSITIONS, bandwidth=c(.1, .1), truncate=F)
# D=0.15
# LIMX=c(min(xvar)-D,max(xvar)+D)
# LIMY=c(min(yvar)-D,max(yvar)+D)
# PALETA=rainbow(nrow(POSITIONS))
# plot(xvar, yvar,col=PALETA,pch=16, cex=1.5, xlim=LIMX,ylim=LIMY)
# text(xvar, yvar,rownames(POSITIONS), pos=3)
#with(GRIDkde,contour(x1, x2, fhat,  col = gray(.2), add=TRUE))
scatterD3(x = POSITIONS$xvar, y = POSITIONS$yvar, lab = rownames(POSITIONS), col_var = POSITIONS$group, lasso = TRUE,ellipses = TRUE,xlab = "Dimensión latente 1",ylab = "Dimensión latente 2",col_lab = "Grupo")
kNNdistplot(clusterData, k = 3)
#GRIDkde <- bkde2D(POSITIONS, bandwidth=c(.1, .1), truncate=F)
# D=0.15
# LIMX=c(min(xvar)-D,max(xvar)+D)
# LIMY=c(min(yvar)-D,max(yvar)+D)
# PALETA=rainbow(nrow(POSITIONS))
# plot(xvar, yvar,col=PALETA,pch=16, cex=1.5, xlim=LIMX,ylim=LIMY)
# text(xvar, yvar,rownames(POSITIONS), pos=3)
#with(GRIDkde,contour(x1, x2, fhat,  col = gray(.2), add=TRUE))
scatterD3(x = POSITIONS$xvar, y = POSITIONS$yvar, lab = rownames(POSITIONS), col_var = POSITIONS$group, lasso = TRUE,ellipses = TRUE,xlab = "Dimensión latente 1",ylab = "Dimensión latente 2",col_lab = "Grupo")
install.packages("visNetwork")
library("visNetwork")
visNetwork(nodes, links, width="100%", height="400px")
setwd("~/Documents/GITHUBs/perutweet/polnet2018/Data files")
nodes <- read.csv("Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
links <- read.csv("Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
library("visNetwork")
visNetwork(nodes, links, width="100%", height="400px")
?visNetwork
friends=read.csv("allCandidatesEdges2018Lima.csv")
numberOfRows=length(unique(friends$candidate))
#library(KernSmooth)
library('Matrix')
friends=read.csv("allCandidatesEdges2018Lima.csv")
setwd("~/Documents/GITHUBs/perutweet")
friends=read.csv("allCandidatesEdges2018Lima.csv")
numberOfRows=length(unique(friends$candidate))
numberOfColumns=length(unique(friends$friend))
incidenceMatrixFriends <- spMatrix(nrow=numberOfRows,ncol=numberOfColumns,
i = as.numeric(factor(friends$candidate)),j = as.numeric(factor(friends$friend)),
x = rep(1, length(as.numeric(friends$candidate))))
row.names(incidenceMatrixFriends) <- levels(factor(friends$candidate))
colnames(incidenceMatrixFriends) <- levels(factor(friends$friend))
adjacencyMatrixFriends <- incidenceMatrixFriends %*% t(incidenceMatrixFriends)
adjacencyMatrixFriends.pc<- log((adjacencyMatrixFriends+.25)/diag(adjacencyMatrixFriends+.25))
ideal<-prcomp(adjacencyMatrixFriends.pc)
#ideal=scale(adjacencyMatrixFriends.pc) %*%varimax(ideal$rotation[,1:2])$loadings
xvar<- ideal$rotation[,1]
yvar<- ideal$rotation[,2]
library(scatterD3)
library(dbscan)
POSITIONS=NULL
POSITIONS<-cbind(xvar,yvar)
clusterData <- as.matrix(POSITIONS[,1:2])
res <- dbscan(clusterData, eps = .07, minPts = 2)
POSITIONS <- data.frame(POSITIONS, group=res$cluster)
scatterD3(x = POSITIONS$xvar, y = POSITIONS$yvar, lab = rownames(POSITIONS), col_var = POSITIONS$group, lasso = TRUE,ellipses = TRUE,xlab = "Dimensión latente 1",ylab = "Dimensión latente 2",col_lab = "Grupo")
setwd("~/Documents/GITHUBs/perutweet")
nodes <- read.csv("nodesCandisLimaDF.csv", header=T, as.is=T)
links <- read.csv("edgesCandisLimaDF.csv", header=T, as.is=T)
library("visNetwork")
visNetwork(nodes, links, width="100%", height="400px")
library("visNetwork")
visNetwork(nodes, links, width="100%", height="400px",
main="Red entre candidatos para Lima Metropolitana",
submain="Quien sigue y quien es seguido por su competidor?",
footer= "Datos obtenidos de Twitter")
library("visNetwork")
visNetwork(nodes, links, width="100%", height="400px",
main="Red entre candidatos para Lima Metropolitana",
submain="Quien sigue y quien es
seguido por su competidor?",
footer= "Datos obtenidos de Twitter")
vis.nodes
vis.nodes <- nodes
library("visNetwork")
vis.nodes <- nodes
visNetwork(nodes, links, width="100%", height="400px",
main="Red entre candidatos para Lima Metropolitana",
submain="Quien sigue y quien es
seguido por su competidor?",
footer= "Datos obtenidos de Twitter",
vis.nodes$size<- vis.nodes$outDegree)
library("visNetwork")
vis.nodes <- nodes
visNetwork(nodes, links, width="100%", height="400px",
main="Red entre candidatos para Lima Metropolitana",
submain="Quien sigue y quien es
seguido por su competidor?",
footer= "Datos obtenidos de Twitter",
vis.nodes$size=vis.nodes$outDegree)
library("visNetwork")
vis.nodes <- nodes
vis.nodes$size=vis.nodes$outDegree
visNetwork(nodes, links, width="100%", height="400px",
main="Red entre candidatos para Lima Metropolitana",
submain="Quien sigue y quien es
seguido por su competidor?",
footer= "Datos obtenidos de Twitter")
library("visNetwork")
vis.nodes <- nodes
vis.links <- links
vis.nodes$size=vis.nodes$outDegree
visNetwork(vis.nodes, vis.links, width="100%", height="400px",
main="Red entre candidatos para Lima Metropolitana",
submain="Quien sigue y quien es
seguido por su competidor?",
footer= "Datos obtenidos de Twitter")
library("visNetwork")
vis.nodes <- nodes
vis.links <- links
vis.nodes$size=vis.nodes$outDegree + 10
visNetwork(vis.nodes, vis.links, width="100%", height="400px",
main="Red entre candidatos para Lima Metropolitana",
submain="Quien sigue y quien es
seguido por su competidor?",
footer= "Datos obtenidos de Twitter")
library("visNetwork")
vis.nodes <- nodes
vis.links <- links
vis.nodes$size=(vis.nodes$outDegree + 1)*10
visNetwork(vis.nodes, vis.links, width="100%", height="400px",
main="Red entre candidatos para Lima Metropolitana",
submain="Quien sigue y quien es
seguido por su competidor?",
footer= "Datos obtenidos de Twitter")
library("visNetwork")
vis.nodes <- nodes
vis.links <- links
vis.nodes$size=(vis.nodes$outDegree + 1)*5
visNetwork(vis.nodes, vis.links, width="100%", height="400px",
main="Red entre candidatos para Lima Metropolitana",
submain="Quien sigue y quien es
seguido por su competidor?",
footer= "Datos obtenidos de Twitter")
library("visNetwork")
vis.nodes <- nodes
vis.nodes$label  <- vis.nodes$id
vis.links <- links
vis.nodes$size=(vis.nodes$outDegree + 1)*5
visNetwork(vis.nodes, vis.links, width="100%", height="400px",
main="Red entre candidatos para Lima Metropolitana",
submain="Quien sigue y quien es
seguido por su competidor?",
footer= "Datos obtenidos de Twitter")
library("visNetwork")
titulo="Red entre candidatos para Lima Metropolitana"
subtitulo="Quien sigue y quien es seguido por su competidor?"
pie="Datos obtenidos de Twitter"
vis.nodes <- nodes
vis.nodes$label  <- vis.nodes$id
vis.nodes$size=(vis.nodes$outDegree + 1)*5
vis.nodes$color.background <- c("slategrey", "tomato", "gold")[vis.nodes$inDegree]
library("visNetwork")
titulo="Red entre candidatos para Lima Metropolitana"
subtitulo="Quien sigue y quien es seguido por su competidor?"
pie="Datos obtenidos de Twitter"
vis.nodes <- nodes
vis.nodes$label  <- vis.nodes$id
vis.nodes$size=(vis.nodes$outDegree + 1)*5
vis.nodes$color.background <- diverge_hcl(length(vis.nodes$outDegree))[rank(vis.nodes$outDegree)]
install.packages("colorspace")
library("visNetwork")
library("colorspace")
titulo="Red entre candidatos para Lima Metropolitana"
subtitulo="Quien sigue y quien es seguido por su competidor?"
pie="Datos obtenidos de Twitter"
vis.nodes <- nodes
vis.nodes$label  <- vis.nodes$id
vis.nodes$size=(vis.nodes$outDegree + 1)*5
vis.nodes$color.background <- diverge_hcl(length(vis.nodes$outDegree))[rank(vis.nodes$outDegree)]
plot(a~b, col=color, pch=16, data=data)
library("visNetwork")
library("colorspace")
titulo="Red entre candidatos para Lima Metropolitana"
subtitulo="Quien sigue y quien es seguido por su competidor?"
pie="Datos obtenidos de Twitter"
vis.nodes <- nodes
vis.nodes$label  <- vis.nodes$id
vis.nodes$size=(vis.nodes$outDegree + 1)*5
vis.nodes$color.background <- diverge_hcl(length(vis.nodes$outDegree))[rank(vis.nodes$outDegree)]
vis.links <- links
visNetwork(vis.nodes, vis.links, width="100%", height="400px",main=titulo,
submain=subtitulo,
footer= pie)
library("visNetwork")
library("colorspace")
titulo="Red entre candidatos para Lima Metropolitana"
subtitulo="Quien sigue y quien es seguido por su competidor?"
pie="Datos obtenidos de Twitter"
vis.nodes <- nodes
vis.nodes$label  <- vis.nodes$id
vis.nodes$size=(vis.nodes$outDegree + 1)*5
vis.nodes$color.background <- diverge_hcl(length(vis.nodes$inDegree))[rank(vis.nodes$inDegree)]
vis.links <- links
visNetwork(vis.nodes, vis.links, width="100%", height="400px",main=titulo,
submain=subtitulo,
footer= pie)
library("visNetwork")
library("colorspace")
titulo="Red entre candidatos para Lima Metropolitana"
subtitulo="Quien sigue y quien es seguido por su competidor?"
pie="Datos obtenidos de Twitter"
vis.nodes <- nodes
vis.nodes$label  <- vis.nodes$id
vis.nodes$size=(vis.nodes$outDegree + 1)*5
vis.nodes$color.background <- terrain_hcl(length(vis.nodes$inDegree))[rank(vis.nodes$inDegree)]
vis.links <- links
visNetwork(vis.nodes, vis.links, width="100%", height="400px",main=titulo,
submain=subtitulo,
footer= pie)
library("visNetwork")
library("colorspace")
titulo="Red entre candidatos para Lima Metropolitana"
subtitulo="Quien sigue y quien es seguido por su competidor?"
pie="Datos obtenidos de Twitter"
vis.nodes <- nodes
vis.nodes$label  <- vis.nodes$id
vis.nodes$size=(vis.nodes$outDegree + 1)*5
vis.nodes$color.background <- heat_hcl(length(vis.nodes$inDegree))[rank(vis.nodes$inDegree)]
vis.links <- links
visNetwork(vis.nodes, vis.links, width="100%", height="400px",main=titulo,
submain=subtitulo,
footer= pie)
library("visNetwork")
library("colorspace")
titulo="Red entre candidatos para Lima Metropolitana"
subtitulo="Quien sigue y quien es seguido por su competidor?"
pie="Datos obtenidos de Twitter"
vis.nodes <- nodes
vis.nodes$label  <- vis.nodes$id
vis.nodes$size=(vis.nodes$inDegree + 1)*5
vis.nodes$color.background <- heat_hcl(length(vis.nodes$outDegree))[rank(vis.nodes$outDegree)]
vis.links <- links
visNetwork(vis.nodes, vis.links, width="100%", height="400px",main=titulo,
submain=subtitulo,
footer= pie)
rank(vis.nodes$outDegree)
vis.nodes$inDegree
library("visNetwork")
library("colorspace")
titulo="Red entre candidatos para Lima Metropolitana"
subtitulo="Quien sigue y quien es seguido por su competidor?"
pie="Datos obtenidos de Twitter"
vis.nodes <- nodes
vis.nodes$label  <- vis.nodes$id
vis.nodes$size=(vis.nodes$inDegree + 1)*5
vis.nodes$color.background <- heat_hcl(length(vis.nodes$outDegree))[rank(vis.nodes$outDegree)]
vis.links <- links
visNetwork(vis.nodes, vis.links, width="100%", height="400px",main=titulo,
submain=subtitulo,
footer= pie)
library("visNetwork")
library("colorspace")
titulo="Red entre candidatos para Lima Metropolitana"
subtitulo="Quien sigue y quien es seguido por su competidor?"
pie="Datos obtenidos de Twitter"
vis.nodes <- nodes
vis.nodes$label  <- vis.nodes$id
vis.nodes$size=(vis.nodes$inDegree + 1)*5
vis.nodes$color.background <- heat_hcl(length(vis.nodes$outDegree))[rank(vis.nodes$outDegree)]
vis.links <- links
vis.links$arrows <- "middle"
visNetwork(vis.nodes, vis.links, width="100%", height="400px",main=titulo,
submain=subtitulo,
footer= pie)
vis.links
View(vis.links)
nodes <- read.csv("nodesCandisLimaDF.csv", header=T, as.is=T)
links <- read.csv("edgesCandisLimaDF.csv", header=T, as.is=T)
library("visNetwork")
library("colorspace")
titulo="Red entre candidatos para Lima Metropolitana"
subtitulo="Quien sigue y quien es seguido por su competidor?"
pie="Datos obtenidos de Twitter"
vis.nodes <- nodes
vis.nodes$label  <- vis.nodes$id
vis.nodes$size=(vis.nodes$inDegree + 1)*5
vis.nodes$color.background <- heat_hcl(length(vis.nodes$outDegree))[rank(vis.nodes$outDegree)]
vis.links <- links
vis.links$arrows <- "middle"
visNetwork(vis.nodes, vis.links, width="100%", height="400px",main=titulo,
submain=subtitulo,
footer= pie)
library("visNetwork")
library("colorspace")
titulo="Red entre candidatos para Lima Metropolitana"
subtitulo="Quien sigue y quien es seguido por su competidor?"
pie="Datos obtenidos de Twitter"
vis.nodes <- nodes
vis.nodes$label  <- vis.nodes$id
vis.nodes$size=(vis.nodes$inDegree + 1)*5
vis.nodes$color.background <- heat_hcl(length(vis.nodes$outDegree))[rank(vis.nodes$outDegree)]
vis.links <- links
vis.links$arrows <- "middle"
vis.links$smooth <- TRUE
visNetwork(vis.nodes, vis.links, width="100%", height="400px",main=titulo,
submain=subtitulo,
footer= pie)
nodes <- read.csv("nodesCandisLimaDF.csv", header=T, as.is=T)
links <- read.csv("edgesCandisLimaDF.csv", header=T, as.is=T)
library("visNetwork")
library("colorspace")
titulo="Red entre candidatos para Lima Metropolitana"
subtitulo="Quien sigue y quien es seguido por su competidor?"
pie="Datos obtenidos de Twitter"
vis.nodes <- nodes
vis.nodes$label  <- vis.nodes$id
vis.nodes$size=(vis.nodes$inDegree + 1)*5
vis.nodes$color.background <- heat_hcl(length(vis.nodes$outDegree))[rank(vis.nodes$outDegree)]
vis.links <- links
vis.links$arrows <- "middle"
vis.links$smooth <- TRUE
visNetwork(vis.nodes, vis.links, width="100%", height="400px",main=titulo,
submain=subtitulo,
footer= pie)
?rank
rank(vis.nodes$outDegree)
library("visNetwork")
library("colorspace")
titulo="Red entre candidatos para Lima Metropolitana"
subtitulo="Quien sigue y quien es seguido por su competidor?"
pie="Datos obtenidos de Twitter"
vis.nodes <- nodes
vis.nodes$label  <- vis.nodes$id
vis.nodes$size=(vis.nodes$inDegree + 1)*5
vis.nodes$color.background <- heat_hcl(length(vis.nodes$outDegree))[vis.nodes$outDegree]
vis.nodes$outDegree
rank(vis.nodes$outDegree)
rank(vis.nodes$outDegree,ties.method= "random")
library("visNetwork")
library("colorspace")
titulo="Red entre candidatos para Lima Metropolitana"
subtitulo="Quien sigue y quien es seguido por su competidor?"
pie="Datos obtenidos de Twitter"
vis.nodes <- nodes
vis.nodes$label  <- vis.nodes$id
vis.nodes$size=(vis.nodes$inDegree + 1)*5
vis.nodes$color.background <- heat_hcl(length(vis.nodes$outDegree))[rank(vis.nodes$outDegree,ties.method= "random")]
vis.links <- links
vis.links$arrows <- "middle"
vis.links$smooth <- FALSE
visNetwork(vis.nodes, vis.links, width="100%", height="400px",main=titulo,
submain=subtitulo,
footer= pie)
View(vis.nodes)
nodes <- read.csv("nodesCandisLimaDF.csv", header=T, as.is=T)
links <- read.csv("edgesCandisLimaDF.csv", header=T, as.is=T)
library("visNetwork")
library("colorspace")
titulo="Red entre candidatos para Lima Metropolitana"
subtitulo="Quien sigue y quien es seguido por su competidor?"
pie="Datos obtenidos de Twitter"
vis.nodes <- nodes
vis.nodes$label  <- vis.nodes$id
vis.nodes$size=(vis.nodes$inDegree + 1)*5
vis.nodes$color.background <- heat_hcl(length(vis.nodes$outDegree))[rank(vis.nodes$outDegree,ties.method= "random")]
vis.links <- links
vis.links$arrows <- "middle"
vis.links$smooth <- FALSE
visNetwork(vis.nodes, vis.links, width="100%", height="400px",main=titulo,
submain=subtitulo,
footer= pie)
?heat_hcl
library("visNetwork")
library("colorspace")
titulo="Red entre candidatos para Lima Metropolitana"
subtitulo="Quien sigue y quien es seguido por su competidor?"
pie="Datos obtenidos de Twitter"
vis.nodes <- nodes
vis.nodes$label  <- vis.nodes$id
vis.nodes$size=(vis.nodes$inDegree + 1)*5
vis.nodes$color.background <- heat_hcl(length(vis.nodes$outDegree))[rank(-vis.nodes$outDegree,ties.method= "random")]
vis.links <- links
vis.links$arrows <- "middle"
vis.links$smooth <- FALSE
visNetwork(vis.nodes, vis.links, width="100%", height="400px",main=titulo,
submain=subtitulo,
footer= pie)
nodes <- read.csv("nodesCandisLimaDF.csv", header=T, as.is=T)
links <- read.csv("edgesCandisLimaDF.csv", header=T, as.is=T)
View(nodes)
nodes <- read.csv("nodesCandisLimaDF.csv", header=T, as.is=T,row.names = F)
library(stargazer)
stargazer(nodes[,-c(1,5)], type = "html", summary = FALSE, rownames = FALSE)
View(nodes)
?visOptions
?visHierarchicalLayout
View(nodes)
setwd("~/Documents/GITHUBs/elecciones2016")
library(igraph)
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
links
nodes
links
links[,-1]
nodes
nodes[,-1]
library(igraph)
net <- graph_from_data_frame(d=links[,-1], vertices=nodes[,-1], directed=T)
netm <- get.adjacency(net, attr="weight", sparse=F)
library(ggplot2)
library(plotly)
library(ggplot2)
#library(plotly)
p <- ggplot(nodes, aes(inDeegree, outDegree)) + geom_point()
ggplotly(p)
library(ggplot2)
#library(plotly)
p <- ggplot(nodes, aes(inDeegree, outDegree)) + geom_point()
p
library(ggplot2)
#library(plotly)
p <- ggplot(nodes, aes(inDegree, outDegree)) + geom_point()
p
# ggplotly(p)
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
